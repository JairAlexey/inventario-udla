<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.udla</groupId>
  <artifactId>inventario</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>inventario</name>
  <url>https://github.com/tu-org/inventario</url>

  <!-- ────── Propiedades globales ─────────────────────────────────────────── -->
  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junit.jupiter.version>5.10.2</junit.jupiter.version>
  </properties>

  <!-- ────── Dependencias ─────────────────────────────────────────────────── -->
  <dependencies>
    <!-- JUnit 5 (Jupiter) -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- ────── Plugins de build ─────────────────────────────────────────────── -->
  <build>
    <plugins>

      <!-- JaCoCo: cobertura + regla 80 % -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.11</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals><goal>prepare-agent</goal></goals>
          </execution>
          <execution>
            <id>check</id>
            <goals><goal>check</goal></goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.60</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>report</id>
            <phase>verify</phase>
            <goals><goal>report</goal></goals>
          </execution>
        </executions>
      </plugin>

      <!-- Surefire 3 .x – necesario para JUnit 5 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <!-- Sin configuración extra: autodetecta JUnit 5 -->
      </plugin>

<!-- SpotBugs - análisis de bytecode -->
<plugin>
    <groupId>com.github.spotbugs</groupId>
    <artifactId>spotbugs-maven-plugin</artifactId>
    <version>4.8.3.0</version>
    <configuration>
        <effort>Max</effort>
        <threshold>Low</threshold>
        <failOnError>true</failOnError>
    </configuration>
</plugin>

      <!-- Checkstyle con reglas Google y tope de 10 violaciones críticas -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.6.0</version>  <!-- Cambiar esto de 3.1.2 a 3.6.0 -->
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <failOnViolation>true</failOnViolation>
          <violationSeverity>error</violationSeverity>
          <maxAllowedViolations>10</maxAllowedViolations>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals><goal>check</goal></goals>
          </execution>
        </executions>
      </plugin>

      <!-- PMD (sin parámetro failsOnError) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.21.0</version>
        <configuration>
          <rulesets>
            <ruleset>/rulesets/java/quickstart.xml</ruleset>
          </rulesets>
          <failOnViolation>true</failOnViolation>
          <printFailingErrors>true</printFailingErrors>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals><goal>check</goal></goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
